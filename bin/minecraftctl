#!/bin/bash
# Mincraft[1.16.5] Java版 forge 管理脚本
# 配置区域
source /etc/minecraftctl/config

cd ${GamePath}

# 向服务器发送信息
function say2server() {
  if [ "$2" != "" ]; then
    if [ "$1" != "" ]; then
      cmd2server "tellraw @a {\"text\":\"<\",\"extra\":[{\"text\":\"$2\",\"clickEvent\":{\"action\":\"suggest_command\",\"value\":\"!!qq \"},\"hoverEvent\":{\"action\":\"show_text\",\"value\":\"消息来自QQ群\"},\"color\":\"white\"},{\"text\":\"> \"},{\"text\":\"$1\"}]}"
    fi
  else
    if [ "$1" != "" ]; then
      cmd2server "say $1"
    fi
  fi

  return 0
}

# 向服务器发送命令
function cmd2server() {
  if [ "$1" != "" ]; then
    screen -x -S "$screen_name" -p 0 -X stuff "$1\n"
  fi
  return 0
}

# 在编辑器中打开指定的文件
function openEditer() {
  # 检测当前是否在VSCode中打开
  whereis code | grep :\ / >/dev/null
  if [ $? -eq 0 ]; then
    code $1
  else
    vim $1
  fi
}

# 返回服务器核心版本,0表示配置错误,1表示官方核心,2表示非官方核心
function GetServerCoreVersion() {
  case ${ServerCore} in
  official | forge)
    return 1
    ;;
  unofficial|bukkit|spigot|paper|purpur|airplane)
    return 2
    ;;
  *)
    return 0
    ;;
  esac
}

# 在官方核心的状态下备份服务器
function BackupInofficial() {
  date
  echo "官方核心模式备份数据中..."
  if [ -d "Backup" ]; then
    if [ -d "Backup/world" ]; then
      # 如果备份数据存在,就将其删除
      rm -rf "Backup/world"
    fi
    cp -r "world" "Backup/world"
    if [ -d "Backup/world_nether" ]; then
      rm -rf "Backup/world_nether"
    fi
    cp -r "world/DIM-1" "Backup/world_nether"
    if [ -d "Backup/world_the_end" ]; then
      rm -rf "Backup/world_the_end"
    fi
    cp -r "world/DIM1" "Backup/world_the_end"
    # 备份配置文件
    if [ -d "Backup/Config" ]; then
      if [ -e "Backup/Config/server.properties" ]; then
        rm -rf "Backup/Config/server.properties"
      fi
      cp "server.properties" "Backup/Config/server.properties"
      if [ -e "Backup/Config/ops.json" ]; then
        rm -rf "Backup/Config/ops.json"
      fi
      cp "ops.json" "Backup/Config/ops.json"
      if [ -e "Backup/Config/config" ]; then
        rm -rf "Backup/Config/config"
      fi
      cp "/etc/minecraftctl/config" "Backup/Config/config"
    fi
    # 移出备份存档
    if [ -e "Backup/Backup.tar.bz2" ]; then
      mv "Backup/Backup.tar.bz2" ./
    fi
    mv "Backup/Backup*.tar.bz2" ./ 2>/dev/null
    # 将备份好的文件进行压缩
    tar -cjf "Backup.tar.bz2" Backup/*
    # 删除多余的备份文件
    rm -rf Backup/world* Backup/Config/*
    # 移回备份存档
    mv "Backup.tar.bz2" Backup/
    mv "Backup*.tar.bz2" Backup/ 2>/dev/null
    # 迁移跑图区块
    #if [ -d "Backup/mcaFile" ]; then
    # 如果文件夹存在，就开始迁移
    # 迁移主世界区块文件
    #if [ ! -d "Backup/mcaFile/master" ]; then mkdir ./Backup/mcaFile/master/ fi;
    #find ./world/region/ -size 12288c -exec mv -f {} ./Backup/mcaFile/master/ \;
    #fi
  fi
}

# 在非官方核心的状态下备份服务器
function BackupInUnofficial() {
  date
  echo "非官方核心模式备份数据中..."
  if [ -d "Backup" ]; then
    if [ -d "Backup/world" ]; then
      # 如果备份数据存在,就将其删除
      rm -rf "Backup/world"
    fi
    cp -r "world" "Backup/world"
    if [ -d "Backup/world_nether" ]; then
      rm -rf "Backup/world_nether"
    fi
    cp -r "world_nether" "Backup/world_nether"
    if [ -d "Backup/world_the_end" ]; then
      rm -rf "Backup/world_the_end"
    fi
    cp -r "world_the_end" "Backup/world_the_end"
    # 备份配置文件
    if [ -d "Backup/Config" ]; then
      if [ -e "Backup/Config/server.properties" ]; then
        rm -rf "Backup/Config/server.properties"
      fi
      cp "server.properties" "Backup/Config/server.properties"
      if [ -e "Backup/Config/ops.json" ]; then
        rm -rf "Backup/Config/ops.json"
      fi
      cp "ops.json" "Backup/Config/ops.json"
      if [ -e "Backup/Config/config" ]; then
        rm -rf "Backup/Config/config"
      fi
      cp "/etc/minecraftctl/config" "Backup/Config/config"
    fi
    # 移出备份存档
    if [ -e "Backup/Backup.tar.bz2" ]; then
      mv "Backup/Backup.tar.bz2" ./
    fi
    mv "Backup/Backup*.tar.bz2" ./ 2>/dev/null
    # 将备份好的文件进行压缩
    tar -cjf "Backup.tar.bz2" Backup/*
    # 删除多余的备份文件
    rm -rf Backup/world* Backup/Config/*
    # 移回备份存档
    mv "Backup.tar.bz2" Backup/
    mv "Backup*.tar.bz2" Backup/ 2>/dev/null
    # 迁移跑图区块
    #if [ -d "Backup/mcaFile" ]; then
    # 如果文件夹存在，就开始迁移
    # 迁移主世界区块文件
    #if [ ! -d "Backup/mcaFile/master" ]; then mkdir ./Backup/mcaFile/master/ fi;
    #find ./world/region/ -size 12288c -exec mv -f {} ./Backup/mcaFile/master/ \;
    #fi
  fi
}

# 检查是否有服务器实例已经存在,如果存在则返回0，否则返回其他值
function ExistServerExample() {
  screen -ls | grep "${screen_name//[/\\[}" >/dev/null 2>/dev/null
}

# 备份服务器存档
function Backup() {
  GetServerCoreVersion
  case $? in
  1)
    BackupInofficial
    ;;

  2)
    BackupInUnofficial
    ;;
  *)
    echo 配置存在问题,服务器核心未知,无法进行备份.
    ;;
  esac
  date
  echo 完成操作.
}

# 编辑配置文件
function EditConfig() {
  if [ $1 ]; then
    case $1 in
    ser | server | server.properties)
      filePath="server.properties"
      ;;
    op | ops | ops.json)
      filePath="ops.json"
      ;;
    wh | wl | whitelist | whitelist.json)
      filePath="whitelist.json"
      ;;
    sp | spigot | spigot.yml)
      filePath="spigot.yml"
      ;;
    cfg | conf | config)
      filePath="/etc/minecraftctl/config"
    ;;
    *)
      return 1
      ;;
    esac
    openEditer $filePath
  fi
}

# 解析消息配置
function AnalysisConfiguration() {
  # 先检查在哪个命令池里进行匹配
  case $3 in
  1)
    cmd_list="start,stop,restart,backup"
    cmd_list_arr=(${cmd_list//,/ })
    for i in "${cmd_list_arr[@]}"; do
      if [ $i==$1 ]; then
        # 若是找到匹配，就调用服务器管理工具
        echo $0 $1 " $2 在群内要求"
        $0 $1 " $2 在群内要求"
        return 0
      fi
    done
    ;&
  0)
    cmd_list="say"
    cmd_list_arr=(${cmd_list//,/ })
    for i in "${cmd_list_arr[@]}"; do
      if [ $i==$1 ]; then
        # 若是找到匹配，就调用服务器管理工具
        %0 say $1 $2
        return 0
      fi
    done
    ;;
  esac
}

# TODO 实时获取玩家说的话(预计使用管道)

case $1 in
restart)
  # 在启动前先关闭之前的服务
  $0 stop 重启服务器
  # 等待子进程结束
  wait $!
  $0 start
  ;;
backup)
  date
  echo 即将开始备份服务器
  say2server '即将开始备份服务器'
  cmd2server 'save-all flush'
  Backup
  ;;
start)
  ExistServerExample
  if [ $? -eq 0 ]; then
    echo 当前已经有正在运行的实例，若是希望重启服务器，使用restart参数
    exit 1
  else
    # 启动服务器
    if [ $authlib == true ]; then
      cmd="java -server -javaagent:authlib-injector-${authlib_injectorVer}.jar=${authlib_injector}"
    else
      cmd="java -server"
    fi
    cmd=$cmd" -Xss512K -Xtune:virtualized -XX:+AggressiveOpts -XX:+UseCompressedOops -Xmx${MaxCache}M -Xms${startCache}M -jar ${MainJAR}.jar nogui"
    # 创建一个对应名称的会话
    screen -dmS "$screen_name"
    cmd2server "$cmd"
    echo "${screen_name} 已提交启动命令,正在启动..."
  fi
  ;;
QQMsg)
  # 向服务器拉取消息心跳事件
  hostnameStr=$(hostname)
  Msg=$(curl -e "${hostnameStr}" -A "${hostnameStr}" https://memoryshadow.cn/Template/Public/ToolAPI/?Function=Robot -d 'Text=Text&PlayerID=0')
  arr_Msg=(${Msg// / })
  #*拉取完成后，解析消息配置
  echo $Msg
  AnalysisConfiguration ${arr_Msg[0]} "${arr_Msg[2]}(${arr_Msg[1]})" ${arr_Msg[3]}
  ;;
stop)
  # 检查是否有示例正在进行
  ExistServerExample
  if [ $? -ne 0 ]; then
    echo 当前无任何实例正在运行，若是希望启动服务器，使用start参数
    exit 1
  fi
  # 向服务器中发出提示
  if [ "$2" != "" ]; then
    say2server "由于$2,即将关闭服务器，请各位做好准备."
  else
    say2server "即将关闭服务器,请各位做好准备."
  fi
  # 等一会
  for i in $(seq 10 -1 1); do
    sleep 1
    say2server "${i}"
  done
  # 停止服务器运行
  cmd2server "stop"
  # 等一会
  sleep 10
  # 然后关闭通话
  cmd2server "exit"

  echo "${screen_name} 已终止运行"
  ;;
join)
  ExistServerExample
  if [ $? -ne 0 ]; then
    echo 当前无任何实例正在运行，若是希望启动服务器，使用start参数
    exit 1
  fi
  screen -rd "${screen_name}"
  ;;
view)
  # 目前还是Beta功能
  screen -x -S "minecraftctl" -p 1 -X stuff "minecraftctl join\n"
  screen -Rd "minecraftctl" -c /etc/minecraftctl/theme/default
  ;;
edit)
  if [ ! $2 ]; then
    openEditer $0
  else
    EditConfig $2
  fi
  ;;
--h | help)
  echo -e "此脚本用于以尽可能简洁的方式对Minecraft服务端进行控制"
  echo -e "minecraftctl <功能名称> [可能的参数]"
  echo
  echo -e "\trestart\t重启服务器"
  echo -e "\tbackup\t备份服务器(如果已经存在实例，就会进行紧急备份)"
  echo -e "\tstart\t启动服务器"
  echo -e "\tQQMsg\t服务器接收QQ消息"
  echo -e "\tstop [理由]\t关闭服务器"
  echo -e "\tjoin\t此功能用于连接后台"
  echo -e "\tview\t(Beta)此功能用于打开一个\"简易控制台\""
  echo -e "\tedit [cfg|ser|op|wh|sp]\t编辑文档功能"
  echo -e "\t--h help\t此功能用于获取帮助文档"
  echo -e "\tsay <要发送的消息> [要模拟的ID]\t向服务器发送消息"
  ;;
say)
  if [ "$3" != "" ]; then
    say2server $2 $3
  else
    say2server $2
  fi
  ;;
*)
  echo "You haven't entered any parameters"
  $0 help
  ;;
esac
