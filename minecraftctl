#!/bin/bash
# Mincraft[1.16.5] Java版 管理脚本
# 配置区域
cd "/home/MiaoZhu/1.16.1"
screen_name='Minecraft fabric[1.16.1] Java'
startCache=800
MaxCache=1024
authlib_injector="https://mcskin.littleservice.cn/api/yggdrasil"
authlib_injectorVer="1.1.38"
MainJAR="fabric-server-launch_1.16.1"
# 服务器核心,支持的值为以下列表
# 模式名称:等效的值
# official:official,forge
# unofficial:unofficial,spigot
ServerCore="fabric"

# 向服务器发送信息
function say2server() {
  if [ "$1" != "" ]; then
    cmd2server "say $1"
  fi
  return 0
}

# 向服务器发送命令
function cmd2server() {
  if [ "$1" != "" ]; then
    screen -x -S "$screen_name" -p 0 -X stuff "$1\n"
  fi
  return 0
}

# 在编辑器中打开指定的文件
function openEditer() {
  # 检测当前是否在VSCode中打开
  whereis code | grep :\ / >/dev/null
  if [ $? -eq 0 ]; then
    code $1
  else
    vim $1
  fi
}

# 返回服务器核心版本,0表示配置错误,1表示官方核心,2表示非官方核心
function GetServerCoreVersion() {
  case ${ServerCore} in
  official | forge | fabric)
    return 1
    ;;
  unofficial | spigot)
    return 2
    ;;
  *)
    return 0
    ;;
  esac
}

# 在非官方核心的状态下备份服务器
function BackupInUnofficial() {
  if [ -d "Backup" ]; then
    if [ -d "Backup/world" ]; then
      # 如果备份数据存在,就将其删除
      rm -rf "Backup/world"
    fi
    cp -r "world" "Backup/world"
    if [ -d "Backup/world_nether" ]; then
      rm -rf "Backup/world_nether"
    fi
    cp -r "world_nether" "Backup/world_nether"
    if [ -d "Backup/world_the_end" ]; then
      rm -rf "Backup/world_the_end"
    fi
    cp -r "world_the_end" "Backup/world_the_end"
    # 备份配置文件
    if [ -d "Backup/Config" ]; then
      if [ -e "Backup/Config/server.properties" ]; then
        rm -rf "Backup/Config/server.properties"
      fi
      cp "server.properties" "Backup/Config/server.properties"
      if [ -e "Backup/Config/ops.json" ]; then
        rm -rf "Backup/Config/ops.json"
      fi
      cp "ops.json" "Backup/Config/ops.json"
    fi
    # 迁移跑图区块
    #if [ -d "Backup/mcaFile" ]; then
    # 如果文件夹存在，就开始迁移
    # 迁移主世界区块文件
    #if [ ! -d "Backup/mcaFile/master" ]; then mkdir ./Backup/mcaFile/master/ fi;
    #find ./world/region/ -size 12288c -exec mv -f {} ./Backup/mcaFile/master/ \;
    #fi
  fi
}

# 在非官方核心的状态下备份服务器
function BackupInUnofficial() {
  if [ -d "Backup" ]; then
    if [ -d "Backup/world" ]; then
      # 如果备份数据存在,就将其删除
      rm -rf "Backup/world"
    fi
    cp -r "world" "Backup/world"
    if [ -d "Backup/world_nether" ]; then
      rm -rf "Backup/world_nether"
    fi
    cp -r "world_nether" "Backup/world_nether"
    if [ -d "Backup/world_the_end" ]; then
      rm -rf "Backup/world_the_end"
    fi
    cp -r "world_the_end" "Backup/world_the_end"
    # 备份配置文件
    if [ -d "Backup/Config" ]; then
      if [ -e "Backup/Config/server.properties" ]; then
        rm -rf "Backup/Config/server.properties"
      fi
      cp "server.properties" "Backup/Config/server.properties"
      if [ -e "Backup/Config/ops.json" ]; then
        rm -rf "Backup/Config/ops.json"
      fi
      cp "ops.json" "Backup/Config/ops.json"
    fi
    # 迁移跑图区块
    #if [ -d "Backup/mcaFile" ]; then
    # 如果文件夹存在，就开始迁移
    # 迁移主世界区块文件
    #if [ ! -d "Backup/mcaFile/master" ]; then mkdir ./Backup/mcaFile/master/ fi;
    #find ./world/region/ -size 12288c -exec mv -f {} ./Backup/mcaFile/master/ \;
    #fi
  fi
}

# 检查是否有服务器实例已经存在,如果存在则返回0，否则返回其他值
function ExistServerExample() {
  screen -ls | grep "${screen_name//[/\\[}" >/dev/null 2>/dev/null
}

# 备份服务器存档
function Backup() {
  GetServerCoreVersion
  case $? in
  1) ;;

  2)
    BackupInUnofficial
    ;;
  *)
    echo 配置存在问题,服务器核心未知,无法进行备份.
    ;;
  esac
}

function EditConfig() {
  if [ $1 ]; then
    case $1 in
    ser | server | server.properties)
      filePath="server.properties"
      ;;
    op | ops | ops.json)
      filePath="ops.json"
      ;;
    wh | wl | whitelist | whitelist.json)
      filePath="whitelist.json"
      ;;
    sp | spigot | spigot.yml)
      filePath="spigot.yml"
      ;;
    *)
      return 1
      ;;
    esac
    openEditer $filePath
  fi
}

# TODO 实时获取玩家说的话(预计使用管道)

case $1 in
restart)
  # 在启动前先关闭之前的服务
  $0 stop 重启服务器
  # 等待子进程结束
  wait $!
  $0 start
  ;;
backup)
  say2server '即将开始备份服务器'
  cmd2server 'save-all'
  Backup
  ;;
start)
  ExistServerExample
  if [ $? -eq 0 ]; then
    echo 当前已经有正在运行的实例，若是希望重启服务器，使用restart参数
    exit 1
  else
    # 启动服务器
    cmd="java -server -javaagent:authlib-injector-${authlib_injectorVer}.jar=${authlib_injector} -Xmx${MaxCache}M -Xms${startCache}M -jar ${MainJAR}.jar nogui"
    # 创建一个对应名称的会话
    screen -dmS "$screen_name"
    cmd2server "$cmd"
    echo "${screen_name} 已提交启动命令,正在启动..."
  fi
  ;;
QQMsg)
  # 向服务器拉取消息心跳事件
  echo 此功能尚未实现
  ;;
stop)
  # 检查是否有示例正在进行
  ExistServerExample
  if [ $? -ne 0 ]; then
    echo 当前无任何实例正在运行，若是希望启动服务器，使用start参数
    exit 1
  fi
  # 向服务器中发出提示
  if [ "$2" != "" ]; then
    say2server "由于$2,即将关闭服务器，请各位做好准备."
  else
    say2server "即将关闭服务器,请各位做好准备."
  fi
  # 等一会
  for i in $(seq 10 -1 1); do
    sleep 1
    say2server "${i}"
  done
  # 停止服务器运行
  cmd2server "stop"
  # 等一会
  sleep 10
  # 然后关闭通话
  cmd2server "exit"

  echo "${screen_name} 已终止运行"
  ;;
join)
  ExistServerExample
  if [ $? -ne 0 ]; then
    echo 当前无任何实例正在运行，若是希望启动服务器，使用start参数
    exit 1
  fi
  screen -rd "${screen_name}"
  ;;
edit)
  if [ ! $2 ]; then
    openEditer $0
  else
    EditConfig $2
  fi
  ;;
--h | help)
  echo -e "此脚本用于以尽可能简洁的方式对Minecraft服务端进行控制"
  echo -e "minecraftctl <功能名称> [可能的参数]"
  echo
  echo -e "\trestart\t重启服务器"
  echo -e "\tbackup\t备份服务器(如果已经存在实例，就会进行紧急备份)"
  echo -e "\tstart\t启动服务器"
  echo -e "\tQQMsg\t服务器接收QQ消息"
  echo -e "\tstop [理由]\t关闭服务器"
  echo -e "\tjoin\t此功能用于连接后台"
  echo -e "\tedit\t编辑文档功能"
  echo -e "\t--h help\t此功能用于获取帮助文档"
  echo -e "\tsay\t向服务器发送消息"
  ;;
say)
  say2server $2
  ;;
*)
  echo "You haven't entered any parameters"
  ;;
esac
